// Total revenue, total quantity sold, and average price per unit for each product, sorted by total revenue in descending order

db.sales.aggregate([
  {
    $group: {
      _id: "$product",
      totalRevenue: { $sum: { $multiply: ["$price", "$quantity"] } },
      totalQuantitySold: { $sum: "$quantity" },
      averagePricePerUnit: { $avg: "$price" }
    }
  },
  {
    $sort: { totalRevenue: -1 }
  }
])

// Average age and gender distribution of a user's friends, sorted by the number of friends in descending order

db.users.aggregate([
  {
    $unwind: "$friends"
  },
  {
    $lookup: {
      from: "users",
      localField: "friends",
      foreignField: "name",
      as: "friendDetails"
    }
  },
  {
    $unwind: "$friendDetails"
  },
  {
    $group: {
      _id: "$_id",
      averageAge: { $avg: "$friendDetails.age" },
      genderDistribution: { $addToSet: "$friendDetails.gender" },
      friendCount: { $sum: 1 }
    }
  },
  {
    $sort: { friendCount: -1 }
  }
])


// Average rating for each genre, sorted by average rating in descending order

db.movies.aggregate([
  {
    $unwind: "$ratings"
  },
  {
    $group: {
      _id: "$genre",
      averageRating: { $avg: "$ratings.score" }
    }
  },
  {
    $sort: { averageRating: -1 }
  }
])


// Total revenue and number of orders for each customer, sorted by total revenue in descending order, including the customer's name

db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "customer_id",
      as: "customerDetails"
    }
  },
  {
    $unwind: "$customerDetails"
  },
  {
    $group: {
      _id: "$customer_id",
      totalRevenue: { $sum: { $multiply: ["$price", "$quantity"] } },
      totalOrders: { $sum: 1 },
      customerName: { $first: "$customerDetails.name" }
    }
  },
  {
    $sort: { totalRevenue: -1 }
  }
])


// Total amount of orders placed by each customer for a given date range

db.orders.aggregate([
  {
    $match: {
      order_date: { $gte: ISODate("start_date"), $lte: ISODate("end_date") }
    }
  },
  {
    $group: {
      _id: "$customer_id",
      totalAmount: { $sum: "$total_amount" }
    }
  }
])


// Number of events of each type triggered by each user for a given date range

db.events.aggregate([
  {
    $match: {
      event_date: { $gte: ISODate("start_date"), $lte: ISODate("end_date") }
    }
  },
  {
    $group: {
      _id: { user_id: "$user_id", event_type: "$event_type" },
      count: { $sum: 1 }
    }
  }
])


// Total revenue generated by each product for a given date range

db.sales.aggregate([
  {
    $match: {
      sale_date: { $gte: ISODate("start_date"), $lte: ISODate("end_date") }
    }
  },
  {
    $group: {
      _id: "$product_id",
      totalRevenue: { $sum: { $multiply: ["$price", "$quantity"] } }
    }
  }
])

